{"version":3,"file":"pages/api/hello.js","mappings":"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","sources":["webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js?96d1","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js?7d7e","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js?dae4","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js?9560","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js?471e","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js?c202","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js?b6a1","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js?ebfc","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js?88cd","webpack://_N_E/","webpack://_N_E/./src/pages/api/hello.ts","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js?7c09","webpack://_N_E/<anon>"],"sourcesContent":["export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export * from \"next/dist/compiled/@edge-runtime/cookies\";\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment.startsWith('@')) {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return `${pathname}/${segment}`;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const ACTION = 'Next-Action';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\n\n//# sourceMappingURL=adapter.js.map","\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/hello.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/hello\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/hello\",\n              handler,\n          })\n        }\n    ","// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nimport type { NextApiRequest, NextApiResponse } from 'next'\n\ntype Data = {\n  name: string\n}\n\nexport default function handler(\n  req: NextApiRequest,\n  res: NextApiResponse<Data>\n) {\n  res.status(200).json({ name: 'John Doe' })\n}\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction serialize(c) {\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n    \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`\n  ].filter(Boolean);\n  return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookieString(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value ?? \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookieString(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookieString(setCookie);\n  const { domain, expires, httponly, maxage, path, samesite, secure } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookieString(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => serialize(value2)).join(\"; \")\n    );\n    return this;\n  }\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => serialize(value)).join(\"; \")\n    );\n    return result;\n  }\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a;\n    this._headers = responseHeaders;\n    const setCookie = ((_a = responseHeaders.getAll) == null ? void 0 : _a.call(responseHeaders, \"set-cookie\")) ?? responseHeaders.get(\"set-cookie\") ?? [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookieString(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  delete(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this.set({ name, value: \"\", expires: new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(serialize).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = serialize(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies\n});\n"],"names":["PageSignatureError","Error","constructor","page","RemovedPageError","RemovedUAError","fromNodeHeaders","object","headers","Headers","key","value","Object","entries","values","Array","isArray","v","undefined","append","splitCookiesString","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","length","test","charAt","push","substring","toNodeHeaders","result","toLowerCase","validateURL","url","String","URL","error","cause","responseSymbol","Symbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","response","Promise","resolve","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","item","ref","ref1","domainHostname","domain","split","defaultLocale","locales","some","locale","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","query","hash","slice","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","parsed","host","normalizeLocalePath","pathnameParts","splice","join","removePathPrefix","withoutPrefix","getNextPathnameInfo","options","_nextConfig","i18n","nextConfig","parseData","paths","pathLocale","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","opts","analyzeUrl","ref2","ref3","ref4","pathnameInfo","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","ref5","includes","searchParams","port","protocol","href","origin","password","username","toString","toJSON","for","clone","INTERNALS","NextRequest","Request","init","cookies","RequestCookies","geo","ip","nextUrl","bodyUsed","cache","credentials","destination","fromEntries","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","keys","set","NextResponse","Response","body","ResponseCookies","ok","redirected","status","statusText","type","json","has","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","stripInternalSearchParams","extended","name","delete","normalizeRscPath","enabled","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","self","__BUILD_MANIFEST","requestUrl","isDataReq","requestHeaders","flightHeaders","Map","param","get","defineProperty","enumerable","event","handler","rewriteUrl","relativizedRewrite","redirectURL","finalResponse","middlewareOverrideHeaders","overwrittenHeaders","all","getUnsupportedModuleErrorMessage","module","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","args","enhanceGlobals","process","__webpack_require__","g","env","globalThis","configurable","_ENTRIES","middleware_instrumentation","register","err","message","mod","middleware","default","next_edge_function_loaderabsolutePagePath_private_next_pages_2Fapi_2Fhello_ts_page_2Fapi_2Fhello_rootDir_2FUsers_2Fmarinastavares_2FProjects_2Fhackaday_2023_","req","res","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","call","__toCommonJS","src_exports","serialize","c","attrs","expires","toUTCString","maxAge","secure","httpOnly","sameSite","filter","Boolean","encodeURIComponent","parseCookieString","cookie","map","pair","splitAt","decodeURIComponent","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","value2","Date","Number","parseSameSite","compact","t","newT","__export","target","exports","SAME_SITE","string","_parsed","_headers","header","iterator","size","getAll","_a","_","n","names","clear","JSON","stringify","responseHeaders","cookieStrings","cookieString","normalizeCookie","bag","serialized","now"],"sourceRoot":""}
var _excluded = ["dev", "children", "renderer", "rehydrate", "theme"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { Children, isValidElement, cloneElement } from 'react';
import PropTypes from 'prop-types';
import createRenderer from './createRenderer';
import { RendererProvider } from 'react-fela'; // eslint-disable-line behance/no-deprecated

import { variables } from '@cloudflare/style-const'; // eslint-disable-line behance/no-deprecated

import { ThemeProvider } from '@cloudflare/style-container';

var StyleProvider = _ref => {
  var {
    dev,
    children,
    renderer,
    rehydrate,
    theme
  } = _ref,
      restProps = _objectWithoutProperties(_ref, _excluded);

  var providerRenderer = renderer || createRenderer({
    dev
  });
  var providerTheme = theme || variables;
  var child = Children.only(children);
  return /*#__PURE__*/React.createElement(RendererProvider, {
    renderer: providerRenderer,
    rehydrate: rehydrate
  }, /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: providerTheme
  }, /*#__PURE__*/isValidElement(child) ? /*#__PURE__*/cloneElement(child, _objectSpread({}, restProps)) : child));
};

StyleProvider.propTypes = {
  children: PropTypes.node,
  dev: PropTypes.bool,
  renderer: PropTypes.object,
  rehydrate: PropTypes.bool,
  theme: PropTypes.object
};
export default StyleProvider;
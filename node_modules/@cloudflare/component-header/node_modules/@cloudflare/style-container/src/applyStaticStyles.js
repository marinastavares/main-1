/* eslint-disable behance/no-deprecated */
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { withTheme } from 'react-fela'; // eslint-disable-line behance/no-deprecated
import { hocDisplayName, addDisplayName } from './displayName';

export const getDisplayName = hocDisplayName('WithStaticStyles');

const applyStaticStyles = (staticStyles, ComponentToWrap) => {
  class CompWithStaticStyles extends PureComponent {
    componentWillMount() {
      const contextTheme = this.props.theme || {};
      staticStyles =
        typeof staticStyles === 'function'
          ? staticStyles(contextTheme)
          : staticStyles;
      this.context.renderer.renderStatic(staticStyles);
    }

    render() {
      return <ComponentToWrap {...this.props} />;
    }
  }

  CompWithStaticStyles.contextTypes = {
    renderer: PropTypes.object
  };

  CompWithStaticStyles.propTypes = {
    theme: PropTypes.object
  };

  const WithThemeHOC = withTheme(CompWithStaticStyles);
  addDisplayName(WithThemeHOC, ComponentToWrap, getDisplayName);

  return WithThemeHOC;
};

export default applyStaticStyles;

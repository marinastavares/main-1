import { TfelaMProps, TElementBreakpoints } from '@cloudflare/types';
import * as React from 'react';

export type TElementProps = React.CSSProperties & TfelaMProps & {};

// @cloudflare/component-grid grid properties
type GridAlignment = 'start' | 'end' | 'center' | 'stretch';

type GridProps = {
  gridColumnSpan?: number | number[] | 'all' | 'end';
  gridColumnPad?: number | number[];
  gridRowSpan?: number | number[];
  gridRowPad?: number | number[];
  gridAlign?: GridAlignment;
  gridJustify?: GridAlignment;
};

export type TElementPropsWithBreakPoints = {
  [Key in keyof TElementProps]:
    | NonNullable<TElementProps[Key]>
    | TElementBreakpoints<NonNullable<TElementProps[Key]>>;
} &
  GridProps;

export type TElementCom<T = {}, El = HTMLElement> = React.FC<
  TElementPropsWithBreakPoints &
    T & {
      innerRef?:
        | (((ref: React.RefObject<El>['current']) => void) | null)
        | React.Ref<El>;
    } & React.AriaAttributes &
    React.DOMAttributes<El>
>;

export const Article: TElementCom;
export const Aside: TElementCom;
export const Details: TElementCom<
  React.DetailsHTMLAttributes<HTMLDetailsElement>
>;
export const Summary: TElementCom;
export const Button: TElementCom<React.ButtonHTMLAttributes<HTMLButtonElement>>;
export const Section: TElementCom;
export const Nav: TElementCom;
export const Div: TElementCom<
  React.HTMLAttributes<HTMLDivElement>,
  HTMLDivElement
>;
export const H1: TElementCom;
export const H2: TElementCom;
export const H3: TElementCom;
export const H4: TElementCom;
export const H5: TElementCom;
export const FigCaption: TElementCom;
export const Figure: TElementCom;
export const Form: TElementCom<
  React.FormHTMLAttributes<HTMLFormElement>,
  HTMLFormElement
>;
export const P: TElementCom<
  React.HTMLAttributes<HTMLParagraphElement>,
  HTMLParagraphElement
>;
export const A: TElementCom<
  React.AnchorHTMLAttributes<HTMLAnchorElement>,
  HTMLAnchorElement
>;
export const Label: TElementCom<
  React.LabelHTMLAttributes<HTMLLabelElement>,
  HTMLLabelElement
>;
export const Fieldset: TElementCom<
  React.LabelHTMLAttributes<HTMLFieldSetElement>,
  HTMLFieldSetElement
>;
export const Legend: TElementCom<
  React.LabelHTMLAttributes<HTMLLegendElement>,
  HTMLLegendElement
>;
export const Output: TElementCom;
export const Pre: TElementCom;
export const Small: TElementCom;
export const I: TElementCom;
export const Em: TElementCom;
export const Strong: TElementCom;
export const Sup: TElementCom;
export const Dl: TElementCom;
export const Dd: TElementCom;
export const Dt: TElementCom;
export const Span: TElementCom<React.HTMLAttributes<HTMLSpanElement>>;
export const Ul: TElementCom<React.HTMLAttributes<HTMLUListElement>>;
export const Ol: TElementCom<React.OlHTMLAttributes<HTMLOListElement>>;
export const Li: TElementCom<React.LiHTMLAttributes<HTMLLIElement>>;
export const Main: TElementCom<React.HTMLAttributes<HTMLElement>>;
export const Header: TElementCom;
export const Footer: TElementCom;
export const Table: TElementCom;
export const Tbody: TElementCom;
export const Td: TElementCom<React.TdHTMLAttributes<HTMLTableDataCellElement>>;
export const Th: TElementCom<
  React.ThHTMLAttributes<HTMLTableHeaderCellElement>,
  HTMLTableHeaderCellElement
>;
export const Thead: TElementCom;
export const Tr: TElementCom;
export const Hr: TElementCom;
export const Textarea: TElementCom<
  React.TextareaHTMLAttributes<HTMLTextAreaElement>,
  HTMLTextAreaElement
>;
export const Input: TElementCom<
  React.InputHTMLAttributes<HTMLInputElement>,
  HTMLInputElement
>;
export const Select: TElementCom<
  React.SelectHTMLAttributes<HTMLSelectElement>,
  HTMLSelectElement
>;
export const Option: TElementCom<
  React.OptionHTMLAttributes<HTMLOptionElement>,
  HTMLOptionElement
>;
export const Code: TElementCom;
export const Img: TElementCom<
  React.ImgHTMLAttributes<HTMLImageElement>,
  HTMLImageElement
>;
export const Address: TElementCom;

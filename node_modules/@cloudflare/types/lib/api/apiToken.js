"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PermissionGroups = exports.CreateToken = exports.PermissionGroupReq = exports.PermissionGroup = exports.ApiTokensAdhocTemplate = exports.ApiTokensTemplate = exports.ApiTokenFormValue = exports.ApiToken = exports.ipAddressFilter = exports.ZoneResource = exports.UserResource = exports.AccountResource = void 0;

var _utilEnGarde = require("@cloudflare/util-en-garde");

var AccountResource = _utilEnGarde.eg.object({
  accountId: _utilEnGarde.eg.string,
  effect: _utilEnGarde.eg.string,
  rowId: _utilEnGarde.eg.number
});

exports.AccountResource = AccountResource;

var UserResource = _utilEnGarde.eg.object({
  effect: _utilEnGarde.eg.string,
  mode: _utilEnGarde.eg.string,
  rowId: _utilEnGarde.eg.number
});

exports.UserResource = UserResource;

var ZoneResource = _utilEnGarde.eg.object({
  accountId: _utilEnGarde.eg.string.optional,
  effect: _utilEnGarde.eg.string,
  mode: _utilEnGarde.eg.string,
  rowId: _utilEnGarde.eg.number,
  zoneId: _utilEnGarde.eg.string
});

exports.ZoneResource = ZoneResource;

var ipAddressFilter = _utilEnGarde.eg.object({
  ipAddresses: _utilEnGarde.eg.array(_utilEnGarde.eg.string),
  operator: _utilEnGarde.eg.string,
  rowId: _utilEnGarde.eg.number
});

exports.ipAddressFilter = ipAddressFilter;

var ApiToken = _utilEnGarde.eg.object({
  expires_on: _utilEnGarde.eg.string.optional,
  id: _utilEnGarde.eg.string,
  name: _utilEnGarde.eg.string,
  not_before: _utilEnGarde.eg.string.optional,
  status: _utilEnGarde.eg.string,
  ipAddressFilters: _utilEnGarde.eg.array(ipAddressFilter).optional,
  issued_on: _utilEnGarde.eg.string,
  modified_on: _utilEnGarde.eg.string,
  last_used_on: _utilEnGarde.eg.string || null,
  creation_type: _utilEnGarde.eg.string.optional,
  scopes: _utilEnGarde.eg.array(_utilEnGarde.eg.string).optional,
  accountResources: _utilEnGarde.eg.array(AccountResource).optional,
  userResources: _utilEnGarde.eg.array(UserResource).optional,
  zoneResources: _utilEnGarde.eg.array(ZoneResource).optional,
  permissionGroups: _utilEnGarde.eg.array(_utilEnGarde.eg.string || _utilEnGarde.eg.number),
  rowId: _utilEnGarde.eg.number,
  cf_challenge_response: _utilEnGarde.eg.string.optional
});

exports.ApiToken = ApiToken;

var ApiTokenFormValue = _utilEnGarde.eg.object({
  expires_on: _utilEnGarde.eg.string.optional,
  id: _utilEnGarde.eg.string,
  name: _utilEnGarde.eg.string,
  not_before: _utilEnGarde.eg.string.optional,
  status: _utilEnGarde.eg.string,
  ipAddressFilters: _utilEnGarde.eg.array(ipAddressFilter).optional,
  issued_on: _utilEnGarde.eg.string,
  modified_on: _utilEnGarde.eg.string,
  last_used_on: _utilEnGarde.eg.string || null,
  scopes: _utilEnGarde.eg.array(_utilEnGarde.eg.string).optional,
  permissionGroupKeys: _utilEnGarde.eg.array(_utilEnGarde.eg.string).optional,
  accountResources: _utilEnGarde.eg.array(AccountResource).optional,
  zoneResources: _utilEnGarde.eg.array(ZoneResource).optional,
  permissionGroups: _utilEnGarde.eg.array(_utilEnGarde.eg.string),
  rowId: _utilEnGarde.eg.number
});

exports.ApiTokenFormValue = ApiTokenFormValue;

var ApiTokensTemplate = _utilEnGarde.eg.object({
  expires_on: _utilEnGarde.eg.string.optional,
  not_before: _utilEnGarde.eg.string.optional,
  key: _utilEnGarde.eg.string,
  permissionGroupKeys: _utilEnGarde.eg.array(_utilEnGarde.eg.object({
    key: _utilEnGarde.eg.string,
    type: _utilEnGarde.eg.string
  })),
  accountId: _utilEnGarde.eg.string.optional,
  mode: _utilEnGarde.eg.string.optional,
  zoneId: _utilEnGarde.eg.string.optional
});

exports.ApiTokensTemplate = ApiTokensTemplate;

var ApiTokensAdhocTemplate = _utilEnGarde.eg.object({
  permissionGroupKeys: _utilEnGarde.eg.array(_utilEnGarde.eg.object({
    key: _utilEnGarde.eg.string,
    type: _utilEnGarde.eg.string
  })),
  accountId: _utilEnGarde.eg.string.optional,
  mode: _utilEnGarde.eg.string.optional,
  zoneId: _utilEnGarde.eg.string.optional
});

exports.ApiTokensAdhocTemplate = ApiTokensAdhocTemplate;

var PermissionGroup = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.string,
  name: _utilEnGarde.eg.string,
  description: _utilEnGarde.eg.string,
  scopes: _utilEnGarde.eg.array(_utilEnGarde.eg.string),
  label: _utilEnGarde.eg.string,
  type: _utilEnGarde.eg.string,
  rowId: _utilEnGarde.eg.number
});

exports.PermissionGroup = PermissionGroup;

var PermissionGroupReq = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.string,
  name: _utilEnGarde.eg.string
});

exports.PermissionGroupReq = PermissionGroupReq;

var CreateToken = _utilEnGarde.eg.object({
  value: _utilEnGarde.eg.string
});

exports.CreateToken = CreateToken;

var PermissionGroups = _utilEnGarde.eg.array(PermissionGroup);

exports.PermissionGroups = PermissionGroups;
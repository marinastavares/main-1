"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserCommunicationPreferences = exports.Preference = exports.Dpa = exports.UserDetails = exports.User = void 0;

var _organization = require("./organization");

var _intlTypes = require("@cloudflare/intl-types");

var _utilEnGarde = require("@cloudflare/util-en-garde");

var User = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.string,
  betas: _utilEnGarde.eg.array(_utilEnGarde.eg.string).optional,
  email: _utilEnGarde.eg.string,
  username: _utilEnGarde.eg.string,
  first_name: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null]),
  last_name: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null]),
  telephone: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null]),
  country: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null]),
  zipcode: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null]),
  has_completed_2fa_recovery_setup: _utilEnGarde.eg.boolean,
  two_factor_authentication_enabled: _utilEnGarde.eg.boolean,
  two_factor_authentication_locked: _utilEnGarde.eg.boolean,
  two_factor_recovery_codes: _utilEnGarde.eg.array(_utilEnGarde.eg.string).optional,
  created_on: _utilEnGarde.eg.string,
  modified_on: _utilEnGarde.eg.string,
  organizations: _utilEnGarde.eg.array(_organization.Organization),
  has_pro_zones: _utilEnGarde.eg.boolean,
  has_business_zones: _utilEnGarde.eg.boolean,
  has_enterprise_zones: _utilEnGarde.eg.boolean,
  email_verified: _utilEnGarde.eg.boolean,
  suspended: _utilEnGarde.eg.boolean,
  twofactor: _utilEnGarde.eg.object({
    type: _utilEnGarde.eg.literal('email')
  }).optional,
  totp_configured: _utilEnGarde.eg.boolean.optional,
  webauthn_configured: _utilEnGarde.eg.boolean.optional,
  redirect_sso: _utilEnGarde.eg.string.optional,
  redirect_oauth: _utilEnGarde.eg.string.optional,
  primary_account_tag: _utilEnGarde.eg.string.optional
});

exports.User = User;

var UserDetails = _utilEnGarde.eg.object({
  '2FA-RECOVERY': _utilEnGarde.eg.string
});

exports.UserDetails = UserDetails;

var Dpa = _utilEnGarde.eg.object({
  created_on: _utilEnGarde.eg.string,
  modified_on: _utilEnGarde.eg.string,
  signed_on: _utilEnGarde.eg.string,
  type: _utilEnGarde.eg.union([_utilEnGarde.eg.literal('standard'), _utilEnGarde.eg.literal('standard_v2')]),
  user: _utilEnGarde.eg.pick(User, ['id'])
});

exports.Dpa = Dpa;

var Preference = _utilEnGarde.eg.object({
  subscribed: _utilEnGarde.eg.boolean,
  created_on: _utilEnGarde.eg.string,
  updated_on: _utilEnGarde.eg.string
});

exports.Preference = Preference;

var UserCommunicationPreferences = _utilEnGarde.eg.object({
  email: _utilEnGarde.eg.object({
    verified: _utilEnGarde.eg.boolean,
    hard_bounce: _utilEnGarde.eg.boolean
  }),
  preferences: _utilEnGarde.eg.object({
    analytics: Preference,
    apps: Preference,
    apps_communication: Preference,
    blog: Preference,
    cf_status: Preference,
    comm_ea: Preference,
    comm_news: Preference,
    comm_ssu: Preference,
    coms_optout_ssl_cert_expired_fallbacks_deployed: Preference,
    coms_optout_ssl_cert_expired_no_fallbacks: Preference,
    coms_optout_ssl_customcert_expiring_notification: Preference,
    coms_optout_ssl_dedicated_cert_expiring_cname_notification: Preference,
    coms_optout_ssl_dedicated_cert_expiring_dns_notification: Preference,
    education: Preference,
    events: Preference,
    feedback: Preference,
    marketing_communication: Preference,
    origin_status: Preference,
    product_news: Preference,
    zone_versioning_warning: Preference
  }),
  'language-locale': _utilEnGarde.eg.enum(_intlTypes.SupportedLocales),
  created_on: _utilEnGarde.eg.string,
  updated_on: _utilEnGarde.eg.string
});

exports.UserCommunicationPreferences = UserCommunicationPreferences;
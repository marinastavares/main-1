"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccountFlagChange = exports.ZoneFlagChange = exports.FlagValue = exports.ZoneFlags = exports.AccountFlags = void 0;

var _utilEnGarde = require("@cloudflare/util-en-garde");

var AccountFlags = _utilEnGarde.eg.object({
  access: _utilEnGarde.eg.object({
    access_service_tokens: _utilEnGarde.eg.boolean.optional,
    custom_auth_domain: _utilEnGarde.eg.boolean.optional,
    disable_login_lockdown: _utilEnGarde.eg.boolean.optional,
    tls_client_auth: _utilEnGarde.eg.boolean.optional,
    use_workers_kv: _utilEnGarde.eg.boolean.optional,
    wildcard_subdomains: _utilEnGarde.eg.boolean.optional,
    teams_casb_beta: _utilEnGarde.eg.boolean.optional,
    teams_casb_alpha: _utilEnGarde.eg.boolean.optional
  }).optional,
  billing: _utilEnGarde.eg.object({
    no_cf_free_zero_cost: _utilEnGarde.eg.boolean.optional,
    ui_refresh: _utilEnGarde.eg.boolean.optional,
    'invoices-view-disallowed': _utilEnGarde.eg.boolean.optional,
    'email-pref-disallowed': _utilEnGarde.eg.boolean.optional
  }).optional,
  bots: _utilEnGarde.eg.object({
    enabled: _utilEnGarde.eg.boolean.optional
  }).optional,
  http_applications: _utilEnGarde.eg.object({
    beta_access: _utilEnGarde.eg.boolean.optional
  }),
  kv: _utilEnGarde.eg.object({
    enabled: _utilEnGarde.eg.boolean.optional
  }).optional,
  registrar: _utilEnGarde.eg.object({
    donated: _utilEnGarde.eg.boolean.optional,
    enabled: _utilEnGarde.eg.boolean.optional,
    global_wave: _utilEnGarde.eg.number.optional,
    opted_in: _utilEnGarde.eg.boolean.optional,
    tweeted: _utilEnGarde.eg.boolean.optional
  }).optional,
  stream: _utilEnGarde.eg.object({
    '4k': _utilEnGarde.eg.boolean.optional,
    canaryEncoding: _utilEnGarde.eg.boolean.optional,
    enabled: _utilEnGarde.eg.boolean.optional,
    maxUploadSizeMib: _utilEnGarde.eg.number.optional,
    maxUploadTotalMib: _utilEnGarde.eg.number.optional,
    priorityModifier: _utilEnGarde.eg.number.optional,
    remoteCopy: _utilEnGarde.eg.boolean.optional,
    webhook: _utilEnGarde.eg.boolean.optional
  }).optional,
  workers: _utilEnGarde.eg.object({
    appworker_develop: _utilEnGarde.eg.boolean.optional,
    enabled: _utilEnGarde.eg.boolean.optional,
    same_zone_worker_on_subrequest: _utilEnGarde.eg.boolean.optional,
    scripts: _utilEnGarde.eg.number.optional,
    use_pipeline: _utilEnGarde.eg.boolean.optional,
    r2_publicbuckets: _utilEnGarde.eg.boolean.optional,
    queues_ui: _utilEnGarde.eg.boolean.optional
  }).optional
});

exports.AccountFlags = AccountFlags;

var ZoneFlags = _utilEnGarde.eg.union([AccountFlags, _utilEnGarde.eg.object({
  analytics: _utilEnGarde.eg.object({
    secondary_nav: _utilEnGarde.eg.boolean.optional
  }).optional,
  firewall: _utilEnGarde.eg.object({
    analytics_load_on_scroll: _utilEnGarde.eg.boolean.optional,
    filter_ui: _utilEnGarde.eg.boolean.optional,
    rule_preview: _utilEnGarde.eg.boolean.optional,
    tab_analytics: _utilEnGarde.eg.boolean.optional
  }).optional,
  quic: _utilEnGarde.eg.object({
    enabled: _utilEnGarde.eg.boolean.optional,
    show_signup_ui: _utilEnGarde.eg.boolean.optional
  }).optional,
  spectrum: _utilEnGarde.eg.object({
    byoip: _utilEnGarde.eg.boolean.optional,
    cdn: _utilEnGarde.eg.boolean.optional,
    enabled: _utilEnGarde.eg.boolean.optional,
    ftp: _utilEnGarde.eg.boolean.optional,
    payg: _utilEnGarde.eg.boolean.optional,
    subscribed: _utilEnGarde.eg.boolean.optional,
    udp: _utilEnGarde.eg.boolean.optional
  }).optional,
  speed: _utilEnGarde.eg.object({
    enabled: _utilEnGarde.eg.boolean.optional
  }).optional,
  ssl: _utilEnGarde.eg.object({
    show_ussl_ca_selector_card: _utilEnGarde.eg.boolean.optional
  }).optional,
  warp: _utilEnGarde.eg.object({
    allowedTunnels: _utilEnGarde.eg.number.optional,
    enabled: _utilEnGarde.eg.boolean.optional,
    maxConnectionsPerHostname: _utilEnGarde.eg.number.optional
  }).optional
})]);

exports.ZoneFlags = ZoneFlags;

var FlagValue = _utilEnGarde.eg.union([_utilEnGarde.eg.boolean, _utilEnGarde.eg.number]);

exports.FlagValue = FlagValue;

var ZoneFlagChange = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.number,
  status: _utilEnGarde.eg.string,
  feature: _utilEnGarde.eg.string,
  value: _utilEnGarde.eg.boolean,
  scope: _utilEnGarde.eg.string,
  created_on: _utilEnGarde.eg.string
});

exports.ZoneFlagChange = ZoneFlagChange;

var AccountFlagChange = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.number,
  status: _utilEnGarde.eg.string,
  feature: _utilEnGarde.eg.string,
  value: _utilEnGarde.eg.boolean,
  scope: _utilEnGarde.eg.string,
  created_on: _utilEnGarde.eg.string
});

exports.AccountFlagChange = AccountFlagChange;
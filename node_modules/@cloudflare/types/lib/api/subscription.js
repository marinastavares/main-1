"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BulkSubscription = exports.SubscriptionSchedule = exports.Subscription = exports.SubscriptionComponentValue = exports.SubscriptionRatePlan = exports.SubscriptionProduct = exports.SubscriptionCancellationReason = exports.SubscriptionProductPublicName = exports.SubscriptionProductName = exports.SubscriptionComponentName = exports.SubscriptionSet = exports.SubscriptionScope = exports.SubscriptionState = exports.Frequency = exports.Currency = exports.SubscriptionZone = void 0;

var _utilEnGarde = require("@cloudflare/util-en-garde");

var _ratePlan = require("./ratePlan");

var SubscriptionZone = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.string,
  name: _utilEnGarde.eg.string
});

exports.SubscriptionZone = SubscriptionZone;

var Currency = _utilEnGarde.eg.literal('USD');

exports.Currency = Currency;

var Frequency = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('monthly'), _utilEnGarde.eg.literal('yearly'), _utilEnGarde.eg.literal('one-time'), _utilEnGarde.eg.literal('')]);

exports.Frequency = Frequency;

// subscription.state. is a bug on backend (BILL-4697)
var SubscriptionState = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('Paid'), _utilEnGarde.eg.literal('Unpaid'), _utilEnGarde.eg.literal('subscription.state.')]);

exports.SubscriptionState = SubscriptionState;

var SubscriptionScope = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('zone'), _utilEnGarde.eg.literal('user')]);

exports.SubscriptionScope = SubscriptionScope;

var SubscriptionSet = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('zone'), _utilEnGarde.eg.literal('is_cloudflare'), _utilEnGarde.eg.literal('public'), _utilEnGarde.eg.literal('usage'), _utilEnGarde.eg.literal('apps')]);

exports.SubscriptionSet = SubscriptionSet;

var SubscriptionComponentName = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('access_users_allowed'), _utilEnGarde.eg.literal('automatic_platform_optimization'), _utilEnGarde.eg.literal('dedicated_certificates'), _utilEnGarde.eg.literal('dedicated_certificates_custom'), _utilEnGarde.eg.literal('image_resizing_requests'), _utilEnGarde.eg.literal('load_balancing_base'), _utilEnGarde.eg.literal('load_balancing_dns_queries'), _utilEnGarde.eg.literal('load_balancing_geo_routing'), _utilEnGarde.eg.literal('load_balancing_load_balancers'), _utilEnGarde.eg.literal('load_balancing_monitor_interval'), _utilEnGarde.eg.literal('load_balancing_origins'), _utilEnGarde.eg.literal('load_balancing_pools'), _utilEnGarde.eg.literal('load_balancing_probe_regions'), _utilEnGarde.eg.literal('rate_limiting_requests'), _utilEnGarde.eg.literal('stream_storage_thousand_minutes'), _utilEnGarde.eg.literal('images_storage_per_hundred_thousand'), _utilEnGarde.eg.literal('page_rules'), _utilEnGarde.eg.literal('spectrum_bytes_transferred'), _utilEnGarde.eg.literal('zones'), _utilEnGarde.eg.literal('r2_class_a_operations'), _utilEnGarde.eg.literal('r2_class_b_operations'), _utilEnGarde.eg.literal('r2_storage'), _utilEnGarde.eg.literal('queues_standard_operations'), _utilEnGarde.eg.literal('queues_enabled')]);

exports.SubscriptionComponentName = SubscriptionComponentName;

var SubscriptionProductName = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('prod_cloudflare'), _utilEnGarde.eg.literal('prod_registrar'), // prod_registrar is a legacy name
_utilEnGarde.eg.literal('registrar'), _utilEnGarde.eg.literal('apps_welcome_bar'), _utilEnGarde.eg.literal('prod_argo'), _utilEnGarde.eg.literal('prod_rate_limiting'), _utilEnGarde.eg.literal('prod_load_balancing'), _utilEnGarde.eg.literal('prod_workers'), _utilEnGarde.eg.literal('prod_stream'), _utilEnGarde.eg.literal('prod_access'), _utilEnGarde.eg.literal('advanced_certificate_manager'), _utilEnGarde.eg.literal('prod_teams'), _utilEnGarde.eg.literal('prod_secure_web_gateway'), _utilEnGarde.eg.literal('waiting_rooms'), _utilEnGarde.eg.literal('prod_image_resizing'), _utilEnGarde.eg.literal('ssl_for_saas'), _utilEnGarde.eg.literal('ssl_for_saas_basic'), _utilEnGarde.eg.literal('prod_cache_reserve'), _utilEnGarde.eg.literal('prod_r2'), _utilEnGarde.eg.literal('prod_web3_ethereum'), _utilEnGarde.eg.literal('prod_web3_ipfs'), _utilEnGarde.eg.literal('msp_zone'), _utilEnGarde.eg.literal('jdc_cloudflare_zones'), _utilEnGarde.eg.literal('bots'), _utilEnGarde.eg.literal('prod_queues')]);

exports.SubscriptionProductName = SubscriptionProductName;

var SubscriptionProductPublicName = _utilEnGarde.eg.union([_utilEnGarde.eg.literal('Argo'), _utilEnGarde.eg.literal('Load Balancing'), _utilEnGarde.eg.literal('CloudFlare Services'), _utilEnGarde.eg.literal('Rate Limiting'), _utilEnGarde.eg.literal('Workers'), _utilEnGarde.eg.literal('Access'), _utilEnGarde.eg.literal('Stream'), _utilEnGarde.eg.literal('Cloudflare Registrar'), _utilEnGarde.eg.literal('Cloudflare Apps'), _utilEnGarde.eg.literal('Advanced Certificate Manager'), _utilEnGarde.eg.literal('Cloudflare for Teams'), _utilEnGarde.eg.literal('Cloudflare Access for Teams'), _utilEnGarde.eg.literal('SSL for SaaS'), _utilEnGarde.eg.literal('Cloudflare Stream'), _utilEnGarde.eg.literal('Cloudflare Images + Stream'), _utilEnGarde.eg.literal('Image Resizing'), _utilEnGarde.eg.literal('R2 Storage'), _utilEnGarde.eg.literal('Cache Reserve'), _utilEnGarde.eg.literal('web3 ETHEREUM'), _utilEnGarde.eg.literal('web3 IPFS')]);

exports.SubscriptionProductPublicName = SubscriptionProductPublicName;

var SubscriptionCancellationReason = _utilEnGarde.eg.object({
  reason_code: _utilEnGarde.eg.array(_utilEnGarde.eg.string),
  other: _utilEnGarde.eg.string.optional,
  jira: _utilEnGarde.eg.string.optional
});

exports.SubscriptionCancellationReason = SubscriptionCancellationReason;

var SubscriptionProduct = _utilEnGarde.eg.object({
  name: SubscriptionProductName,
  period: _utilEnGarde.eg.string,
  billing: _utilEnGarde.eg.string,
  public_name: SubscriptionProductPublicName,
  duration: _utilEnGarde.eg.number
});

exports.SubscriptionProduct = SubscriptionProduct;

var SubscriptionRatePlan = _utilEnGarde.eg.object({
  id: _ratePlan.RatePlanId,
  public_name: _utilEnGarde.eg.string,
  currency: Currency,
  scope: SubscriptionScope,
  externally_managed: _utilEnGarde.eg.boolean,
  is_contract: _utilEnGarde.eg.boolean,
  sets: _utilEnGarde.eg.array(SubscriptionSet)
});

exports.SubscriptionRatePlan = SubscriptionRatePlan;

var SubscriptionComponentValue = _utilEnGarde.eg.object({
  name: SubscriptionComponentName,
  value: _utilEnGarde.eg.number,
  default: _utilEnGarde.eg.number.optional,
  price: _utilEnGarde.eg.number.optional
});

exports.SubscriptionComponentValue = SubscriptionComponentValue;

var Subscription = _utilEnGarde.eg.object({
  app: _utilEnGarde.eg.object({
    install_id: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null])
  }),
  id: _utilEnGarde.eg.string,
  state: SubscriptionState,
  price: _utilEnGarde.eg.number.optional,
  currency: Currency,
  entitled: _utilEnGarde.eg.boolean.optional,
  component_values: _utilEnGarde.eg.array(SubscriptionComponentValue),
  product: SubscriptionProduct,
  zone: SubscriptionZone.optional,
  frequency: Frequency,
  rate_plan: SubscriptionRatePlan,
  current_period_end: _utilEnGarde.eg.string.optional,
  current_period_start: _utilEnGarde.eg.string.optional,
  cancel_at_period_end: _utilEnGarde.eg.boolean.optional,
  next_rate_plan: _utilEnGarde.eg.object({
    app: _utilEnGarde.eg.object({
      install_id: _utilEnGarde.eg.union([_utilEnGarde.eg.string, _utilEnGarde.eg.null])
    }),
    id: _utilEnGarde.eg.string,
    state: SubscriptionState,
    price: _utilEnGarde.eg.number,
    currency: Currency,
    component_values: _utilEnGarde.eg.array(SubscriptionComponentValue),
    product: SubscriptionProduct,
    zone: SubscriptionZone,
    frequency: Frequency,
    rate_plan: SubscriptionRatePlan,
    current_period_end: _utilEnGarde.eg.string.optional,
    current_period_start: _utilEnGarde.eg.string.optional
  }).optional,
  payment_method_id: _utilEnGarde.eg.union([_utilEnGarde.eg.number, _utilEnGarde.eg.string]).optional,
  // BILL-17536
  created_date: _utilEnGarde.eg.string.optional
});

exports.Subscription = Subscription;

var SubscriptionSchedule = _utilEnGarde.eg.object({
  id: _utilEnGarde.eg.number,
  account_id: _utilEnGarde.eg.number,
  subscription_id: _utilEnGarde.eg.number,
  // the associated subscription_id
  current_phase_start_date: _utilEnGarde.eg.string,
  // same current_period_start value as the current active phase
  current_phase_end_date: _utilEnGarde.eg.string,
  // same current_period_ent value as the current active phase
  phases: _utilEnGarde.eg.array(_utilEnGarde.eg.object({
    rateplan: _utilEnGarde.eg.object({
      id: _ratePlan.RatePlanId
    }),
    component_values: _utilEnGarde.eg.array(_utilEnGarde.eg.object({})),
    current_period_start: _utilEnGarde.eg.string,
    current_period_end: _utilEnGarde.eg.string
  }))
});

exports.SubscriptionSchedule = SubscriptionSchedule;

var BulkSubscription = _utilEnGarde.eg.object({
  coupon_code: _utilEnGarde.eg.string.optional,
  subscriptions: _utilEnGarde.eg.array(Subscription)
});

exports.BulkSubscription = BulkSubscription;
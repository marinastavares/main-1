import { TypeFromCodec } from '@cloudflare/util-en-garde';
export declare const RegistrationStatus: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingAuthorization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingZoneCreate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingRegister">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingZoneActivate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingSettlement">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedAuthorization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedQuote">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedRegister">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedZoneCreate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedZoneActivate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedSettlement">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationActive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"expiredParked">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deletionInitiated">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deletionIrredeemable">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"domainTerminated">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"domainLocked">>]>>;
export declare const LandingSettings: import("@cloudflare/util-en-garde").ObjectCodec<{
    eligible: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
}>;
export declare type RegistrationStatus = TypeFromCodec<typeof RegistrationStatus>;
export declare const RegistrantContact: import("@cloudflare/util-en-garde").ObjectCodec<{
    address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
    last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type RegistrantContact = TypeFromCodec<typeof RegistrantContact>;
export declare const RegistrantContacts: import("@cloudflare/util-en-garde").ObjectCodec<{
    registrant: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
    technical: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
    administrator: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
    billing: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
}>;
export declare type RegistrantContacts = TypeFromCodec<typeof RegistrantContacts>;
export declare const RegistrationSettings: import("@cloudflare/util-en-garde").ObjectCodec<{
    auto_renew: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    privacy: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    contacts: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        registrant: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
            last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>, import("io-ts").UndefinedC]>>;
        technical: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
            last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>, import("io-ts").UndefinedC]>>;
        administrator: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
            last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>, import("io-ts").UndefinedC]>>;
        billing: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
            last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>, import("io-ts").UndefinedC]>>;
    }>, import("io-ts").UndefinedC]>>;
    years: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
}>;
export declare type RegistrationSettings = TypeFromCodec<typeof RegistrationSettings>;
export declare const DomainFees: import("@cloudflare/util-en-garde").ObjectCodec<{
    icann_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    redemption_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    registration_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    renewal_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    transfer_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
}>;
export declare type DomainFees = TypeFromCodec<typeof DomainFees>;
export declare enum DomainProtectionStatus {
    ONBOARDING_INITIATED = "Onboarding Initiated",
    ONBOARDED = "Onboarded",
    PENDING_REGISTRY_LOCK = "Pending Registry Lock",
    PENDING_REGISTRY_UNLOCK = "Pending Registry Unlock",
    REGISTRY_UNLOCKED = "Registry Unlocked",
    LOCKED = "Locked",
    FAILED_TO_LOCK = "Failed To Lock",
    PENDING_UNLOCK_APPROVAL = "Pending Unlock Approval",
    UNLOCKED = "Unlocked",
    OFFBOARDED = "Offboarded"
}
export declare const Domain: import("@cloudflare/util-en-garde").ObjectCodec<{
    administrator_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
    auto_renew: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    available: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    billing_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
    can_register: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    cloudflare_dns: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    cloudflare_registration: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    contacts_updated_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    created_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    created_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    current_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    domain_protection_services: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof DomainProtectionStatus>>>, import("io-ts").UndefinedC]>>;
    }>, import("io-ts").UndefinedC]>>;
    dns: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>, import("io-ts").UndefinedC]>>;
    ds_records: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>, import("io-ts").UndefinedC]>>;
    expires_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    fees: import("@cloudflare/util-en-garde").ObjectCodec<{
        icann_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        redemption_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        registration_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        renewal_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        transfer_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    }>;
    last_known_status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingAuthorization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingZoneCreate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingRegister">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingZoneActivate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingSettlement">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedAuthorization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedQuote">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedRegister">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedZoneCreate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedZoneActivate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedSettlement">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationActive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"expiredParked">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deletionInitiated">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deletionIrredeemable">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"domainTerminated">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"domainLocked">>]>>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
    locked: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name_servers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    landing: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        eligible: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>]>>, import("io-ts").UndefinedC]>>;
    partner_response: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
    payment_expires_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    pending_transfer: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    permissions: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    previous_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
    privacy: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    registrant_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
    registry_object_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
    registry_statuses: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    supported_tld: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    technical_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
    transfer_conditions: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        exists: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        not_premium: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        not_secure: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        not_started: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        not_waiting: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        supported_tld: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    }>, import("io-ts").UndefinedC]>>;
    updated_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
    updated_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    using_created_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    using_current_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    using_previous_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    using_updated_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    whois: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
}>;
export declare type Domain = TypeFromCodec<typeof Domain>;
export declare const DomainExists: import("@cloudflare/util-en-garde").ObjectCodec<{
    available: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
}>;
export declare type DomainExists = TypeFromCodec<typeof DomainExists>;
export declare const GetDomainsResult: import("@cloudflare/util-en-garde").ObjectCodec<{
    result: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        administrator_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
        auto_renew: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        available: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        billing_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
        can_register: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        cloudflare_dns: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        cloudflare_registration: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        contacts_updated_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        created_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        created_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        current_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        domain_protection_services: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof DomainProtectionStatus>>>, import("io-ts").UndefinedC]>>;
        }>, import("io-ts").UndefinedC]>>;
        dns: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>, import("io-ts").UndefinedC]>>;
        ds_records: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>, import("io-ts").UndefinedC]>>;
        expires_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        fees: import("@cloudflare/util-en-garde").ObjectCodec<{
            icann_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
            redemption_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
            registration_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
            renewal_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
            transfer_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        }>;
        last_known_status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingAuthorization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingZoneCreate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingRegister">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingZoneActivate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationPendingSettlement">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedAuthorization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedQuote">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedRegister">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedZoneCreate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedZoneActivate">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationFailedSettlement">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"registrationActive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"expiredParked">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deletionInitiated">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deletionIrredeemable">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"domainTerminated">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"domainLocked">>]>>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
        locked: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        name_servers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
        landing: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            eligible: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>]>>, import("io-ts").UndefinedC]>>;
        partner_response: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
        payment_expires_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        pending_transfer: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        permissions: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
        previous_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
        privacy: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        registrant_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            address: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            city: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            fax: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            label: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
            last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            organization: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            phone: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            state: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            zip: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
        registry_object_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
        registry_statuses: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        supported_tld: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        technical_contact: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
        transfer_conditions: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            exists: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            not_premium: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            not_secure: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            not_started: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            not_waiting: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            supported_tld: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        }>, import("io-ts").UndefinedC]>>;
        updated_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>, import("io-ts").UndefinedC]>>;
        updated_registrar: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        using_created_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        using_current_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        using_previous_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        using_updated_registrar_nameservers: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        whois: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnknownC>, import("io-ts").UndefinedC]>>;
    }>>>;
    result_info: import("@cloudflare/util-en-garde").ObjectCodec<{
        count: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        page: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        per_page: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        total_count: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    }>;
    errors: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    messages: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    success: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
}>;
export declare const DomainSearchResult: import("@cloudflare/util-en-garde").ObjectCodec<{
    check_result: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        supported_tld: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        premium: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        available: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        can_register: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    }>]>>, import("io-ts").UndefinedC]>>;
    domains: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        availability: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        price: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        icann_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        pricing: import("@cloudflare/util-en-garde").ObjectCodec<{
            currency: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            registration_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
            renewal_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        }>;
        pricing_local: import("@cloudflare/util-en-garde").ObjectCodec<{
            currency: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            registration_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
            renewal_fee: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        }>;
    }>>>;
}>;
export declare type DomainSearchResult = TypeFromCodec<typeof DomainSearchResult>;
export declare const DomainEligibility: import("@cloudflare/util-en-garde").ObjectCodec<{
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    can_register: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
    supported_tld: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
    premium: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
    available: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
}>;
export declare type DomainEligibility = TypeFromCodec<typeof DomainEligibility>;
export declare enum ApproverStatus {
    PENDING = "pending",
    VERIFIED = "verified",
    REJECTED = "rejected",
    PENDING_DELETE = "pending_delete",
    DELETED = "deleted"
}
export declare const DesignatedApprover: import("@cloudflare/util-en-garde").ObjectCodec<{
    email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof ApproverStatus>>>;
    first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
    last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
    phone_number: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
}>;
export declare type Approver = TypeFromCodec<typeof DesignatedApprover>;
export declare const DomainProtectionDesignatedApprovers: import("@cloudflare/util-en-garde").ObjectCodec<{
    designated_approvers: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        status: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof ApproverStatus>>>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        phone_number: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
    }>>>;
}>;
export declare enum DomainProtectionConfigStatus {
    PENDING = "pending",
    PENDING_UPDATE = "pending_update",
    ENABLED = "enabled",
    DISABLED = "disabled"
}
export declare const DomainProtectionConfig: import("@cloudflare/util-en-garde").ObjectCodec<{
    auto_relock_after: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    number_of_designated_approvers: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof DomainProtectionConfigStatus>>>;
}>;
export declare type DomainProtectionConfig = TypeFromCodec<typeof DomainProtectionConfig>;
export declare const DomainProtectionData: import("@cloudflare/util-en-garde").Codec<import("io-ts").IntersectionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
    auto_relock_after: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    number_of_designated_approvers: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof DomainProtectionConfigStatus>>>;
}>, import("@cloudflare/util-en-garde").ObjectCodec<{
    designated_approvers: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        status: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralType<import("@cloudflare/util-en-garde/dist/type-helpers").ValueOf<typeof ApproverStatus>>>;
        first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
        phone_number: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
    }>>>;
}>]>>;
export declare type DomainProtectionData = TypeFromCodec<typeof DomainProtectionData>;
export declare const DomainProtectionPostResult: import("@cloudflare/util-en-garde").ObjectCodec<{
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    message: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare enum ResendDomainProtectionEmailRequest {
    UNLOCK_APPROVAL = "UnlockApprovalRequest",
    CONFIGURATION_UPDATE = "ConfigurationUpdateRequest",
    APPROVER_EMAIL_VERIFICATION = "DesignatedApproverVerificationRequest",
    APPROVER_REMOVAL = "DesignatedApproverRemovalRequest"
}

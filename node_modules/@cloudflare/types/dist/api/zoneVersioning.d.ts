import { TypeFromCodec } from '@cloudflare/util-en-garde';
declare const HTTPApplication: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    current_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type HTTPApplication = TypeFromCodec<typeof HTTPApplication>;
declare const ZoneApplication: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    current_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type ZoneApplication = TypeFromCodec<typeof ZoneApplication>;
declare const ZoneVersion: import("@cloudflare/util-en-garde").ObjectCodec<{
    version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    cloned_from: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    application_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    locked: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type ZoneVersion = TypeFromCodec<typeof ZoneVersion>;
declare const CreateZoneVersion: import("@cloudflare/util-en-garde").ObjectCodec<{
    version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    clone_from: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    application_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    locked: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type CreateZoneVersion = TypeFromCodec<typeof CreateZoneVersion>;
export declare const ZoneInfo: import("@cloudflare/util-en-garde").ObjectCodec<{
    zone_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    zone_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
declare type ZoneInfo = TypeFromCodec<typeof ZoneInfo>;
export declare type ConvertedZoneVersion = {
    root: ZoneInfo;
    parent: ZoneInfo;
    versionId: number;
} & ZoneInfo;
declare const WAFMigrationStatus: import("@cloudflare/util-en-garde").ObjectCodec<{
    new_waf_status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    old_waf_status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type WAFMigrationStatus = TypeFromCodec<typeof WAFMigrationStatus>;
export {};

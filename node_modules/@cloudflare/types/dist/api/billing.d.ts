import { TypeFromCodec } from '@cloudflare/util-en-garde';
export declare const PaymentGateway: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"paypal">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"stripe">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"">>]>>;
export declare type PaymentGateway = TypeFromCodec<typeof PaymentGateway>;
export declare const DeviceDetails: import("@cloudflare/util-en-garde").ObjectCodec<{
    device_session_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    fraud_merchant_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    correlation_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type DeviceDetails = TypeFromCodec<typeof DeviceDetails>;
export declare const BFResponse: import("@cloudflare/util-en-garde").ObjectCodec<{
    nonce: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    deviceDetails: import("@cloudflare/util-en-garde").ObjectCodec<{
        device_session_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fraud_merchant_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        correlation_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>;
    details: import("@cloudflare/util-en-garde").ObjectCodec<{
        firstName: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        lastName: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        email: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>;
}>;
export declare type BFResponse = TypeFromCodec<typeof BFResponse>;
export declare const PaymentMethodType: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"PAYPAL">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CREDIT_CARD">>]>>;
export declare type PaymentMethodType = TypeFromCodec<typeof PaymentMethodType>;
export declare const PaymentMethod: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"PAYPAL">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CREDIT_CARD">>]>>, import("io-ts").UndefinedC]>>;
    last_four: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    expiration_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    country: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    zipcode: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    state: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    city: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_email: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_gateway: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"paypal">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"stripe">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"">>]>>, import("io-ts").UndefinedC]>>;
    payment_nonce: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    device_data: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        device_session_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fraud_merchant_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        correlation_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
    default: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    h_captcha_response: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    validation_code: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    captcha_challenge_jwt: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
}>;
export declare type PaymentMethod = TypeFromCodec<typeof PaymentMethod>;
export declare const PaymentMethodList: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"PAYPAL">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CREDIT_CARD">>]>>, import("io-ts").UndefinedC]>>;
    last_four: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    expiration_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    country: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    zipcode: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    state: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    city: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_email: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_gateway: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"paypal">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"stripe">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"">>]>>, import("io-ts").UndefinedC]>>;
    payment_nonce: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    device_data: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        device_session_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fraud_merchant_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        correlation_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
    default: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    h_captcha_response: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    validation_code: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    captcha_challenge_jwt: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
}>>>;
export declare type PaymentMethodList = TypeFromCodec<typeof PaymentMethodList>;
export declare const BillingProfile: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    company: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    billing_email: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    city: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    state: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    zipcode: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    enterprise_billing_email: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    enterprise_primary_email: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    card_expiry_month: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    card_expiry_year: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    card_number: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    vat: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_email: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_first_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    payment_last_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    payment_address: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    payment_zipcode: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    payment_state: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_city: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_gateway: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"paypal">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"stripe">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"">>]>>;
    next_bill_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    use_legacy: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    is_partner: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    buying_rate_plan: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    profile_type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"payment_method">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"billing">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"invoice">>]>>, import("io-ts").UndefinedC]>>;
    validation_code: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    payment_nonce: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    device_data: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        device_session_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        fraud_merchant_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        correlation_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>, import("io-ts").UndefinedC]>>;
    account_type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    balance: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    h_captcha_response: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    captcha_challenge_jwt: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    default: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"PAYPAL">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CREDIT_CARD">>]>>, import("io-ts").UndefinedC]>>;
}>;
export declare type BillingProfile = TypeFromCodec<typeof BillingProfile>;
export declare const BillingAccountType: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_ent">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"ad_hoc_contract">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"employee">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"election">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"sfcc">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_basic">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"startup">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"intern">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"ibm">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"pay_go">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"cloudflare_ent">>]>>;
export declare type BillingAccountType = TypeFromCodec<typeof BillingAccountType>;
export declare const BillingAccount: import("@cloudflare/util-en-garde").ObjectCodec<{
    account_type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_ent">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"ad_hoc_contract">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"employee">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"election">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"sfcc">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_basic">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"startup">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"intern">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"ibm">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"pay_go">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"cloudflare_ent">>]>>, import("io-ts").UndefinedC]>>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    flags: import("@cloudflare/util-en-garde").ObjectCodec<{
        async_tract: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        banned: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        pdf_invoices: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        install_base_customer: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        bad_debt: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    }>;
}>;
export declare type BillingAccount = TypeFromCodec<typeof BillingAccount>;
export declare const BillingTransaction: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    action: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    occurred_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    invoice_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    receipt_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    currency: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    external_invoice_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    amount: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    amount_to_pay: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"OPEN">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CLOSED">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"DRAFT">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"PROCESSING">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CREDIT_FULLY_APPLIED">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CREDIT_OPEN">>]>>;
    source: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type BillingTransaction = TypeFromCodec<typeof BillingTransaction>;
export declare const BillingPayment: import("@cloudflare/util-en-garde").ObjectCodec<{
    payment_applications: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        invoice_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        amount: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    }>>>, import("io-ts").UndefinedC]>>;
    amount: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    payment_method_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>, import("io-ts").UndefinedC]>>;
}>;
export declare type BillingPayment = TypeFromCodec<typeof BillingPayment>;
export declare const BillingQuote: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    account_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    coupon_code: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    original_price: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    discount: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    price: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    subscriptions: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        quantity: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        unit_original_price: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        unit_discount: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        unit_price: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        rate_plan: import("@cloudflare/util-en-garde").ObjectCodec<{
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>;
        component_values: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            value: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        }>>>;
    }>>>;
    created_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type BillingQuote = TypeFromCodec<typeof BillingQuote>;
export declare const BillableUsageMetric: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"streamMinutesViewed">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"rateLimitingRequestsAllowed">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"loadBalancingQueries">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"argoAcceleratedBytes">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"workersRequests">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"workersKVReads">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"imageResizingRequests">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"spectrumBytesTransferred">>]>>;
export declare type BillableUsageMetric = TypeFromCodec<typeof BillableUsageMetric>;
export declare const BillableUsageTimeDelta: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"minute">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"hour">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"day">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"week">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"month">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"quarter">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"year">>]>>;
export declare type BillableUsageTimeDelta = TypeFromCodec<typeof BillableUsageTimeDelta>;
export declare const BillableUsage: import("@cloudflare/util-en-garde").ObjectCodec<{
    rows: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    data: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        metrics: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>>>>>;
    }>>>]>>, import("io-ts").UndefinedC]>>;
    data_lag: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    min: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>;
    max: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>;
    totals: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>>>;
    query: import("@cloudflare/util-en-garde").ObjectCodec<{
        dimensions: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>>>;
        metrics: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"streamMinutesViewed">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"rateLimitingRequestsAllowed">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"loadBalancingQueries">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"argoAcceleratedBytes">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"workersRequests">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"workersKVReads">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"imageResizingRequests">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"spectrumBytesTransferred">>]>>>>, import("io-ts").UndefinedC]>>;
        since: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        until: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        time_delta: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"minute">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"hour">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"day">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"week">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"month">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"quarter">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"year">>]>>;
        limit: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    }>;
    time_intervals: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").TupleC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>]>>>>, import("io-ts").UndefinedC]>>;
}>;
export declare type BillableUsage = TypeFromCodec<typeof BillableUsage>;
export declare const BillingAccountCredits: import("@cloudflare/util-en-garde").ObjectCodec<{
    total_account_credits: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
}>;
export declare type BillingAccountCredits = TypeFromCodec<typeof BillingAccountCredits>;
export declare const PlanName: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ_EMP">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ_FREE">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ_PLUS">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_ENT">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_FREE">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_PRO_20_20">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_PRO_20_5">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_PRO_FREE">>]>>;
export declare type PlanName = TypeFromCodec<typeof PlanName>;
export declare const BillingAddress: import("@cloudflare/util-en-garde").ObjectCodec<{
    address: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    city: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    state: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    zipcode: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    validation_code: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
}>;
export declare type BillingAddress = TypeFromCodec<typeof BillingAddress>;
export declare const AddressValidation: import("@cloudflare/util-en-garde").ObjectCodec<{
    validated_addresses: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        address: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        address2: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        city: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        state: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        zipcode: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        country: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        validation_code: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    }>>>;
}>;
export declare type AddressValidation = TypeFromCodec<typeof AddressValidation>;
export declare const BillingPlan: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"free">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"pro">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"business">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"enterprise">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"enterprise_trial">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"lite">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"pro_plus">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_free">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_pro">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_biz">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"partners_ent">>]>>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ_EMP">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ_FREE">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_BIZ_PLUS">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_ENT">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_FREE">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_PRO_20_20">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_PRO_20_5">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"CF_PRO_FREE">>]>>;
    currency: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"USD">>;
    frequency: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"monthly">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"yearly">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"one-time">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"">>]>>;
    components: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"access_users_allowed">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"automatic_platform_optimization">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"dedicated_certificates">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"dedicated_certificates_custom">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"image_resizing_requests">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_base">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_dns_queries">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_geo_routing">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_load_balancers">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_monitor_interval">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_origins">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_pools">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"load_balancing_probe_regions">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"rate_limiting_requests">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"stream_storage_thousand_minutes">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"images_storage_per_hundred_thousand">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"page_rules">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"spectrum_bytes_transferred">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"zones">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"r2_class_a_operations">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"r2_class_b_operations">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"r2_storage">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queues_standard_operations">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queues_enabled">>]>>;
        default: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        unit_price: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    }>>>;
    sets: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"zone">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"is_cloudflare">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"public">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"usage">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"apps">>]>>>>;
    is_contract: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
}>;
export declare type BillingPlan = TypeFromCodec<typeof BillingPlan>;

import { TypeFromCodec } from '@cloudflare/util-en-garde';
import { TypeFromEnumerable } from '../utils/enumerable';
export declare const PagesUploadFileResult: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type PagesUploadFileResult = TypeFromCodec<typeof PagesUploadFileResult>;
export declare const Environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"preview">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"production">>]>>;
export declare type Environment = TypeFromCodec<typeof Environment>;
export declare const DeploymentStage: import("@cloudflare/util-en-garde").ObjectCodec<{
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
    started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
    ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
}>;
export declare type DeploymentStage = TypeFromCodec<typeof DeploymentStage>;
export declare const BuildConfig: import("@cloudflare/util-en-garde").ObjectCodec<{
    build_command: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    destination_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    root_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    web_analytics_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    web_analytics_token: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    fast_builds: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
}>;
export declare type BuildConfig = TypeFromCodec<typeof BuildConfig>;
export declare const ProjectSourceConfig: import("@cloudflare/util-en-garde").ObjectCodec<{
    owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    repo_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    pr_comments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    production_deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    preview_deployment_setting: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"all">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"none">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"custom">>]>>, import("io-ts").UndefinedC]>>;
    preview_branch_includes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    preview_branch_excludes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
}>;
export declare type ProjectSourceConfig = TypeFromCodec<typeof ProjectSourceConfig>;
export declare const ProjectSource: import("@cloudflare/util-en-garde").ObjectCodec<{
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"github">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"gitlab">>]>>;
    config: import("@cloudflare/util-en-garde").ObjectCodec<{
        owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        repo_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        pr_comments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        production_deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        preview_deployment_setting: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"all">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"none">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"custom">>]>>, import("io-ts").UndefinedC]>>;
        preview_branch_includes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
        preview_branch_excludes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    }>;
}>;
export declare type ProjectSource = TypeFromCodec<typeof ProjectSource>;
export declare const Deployment: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    project_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    project_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    url: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"preview">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"production">>]>>;
    deployment_trigger: import("@cloudflare/util-en-garde").ObjectCodec<{
        type: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        metadata: import("@cloudflare/util-en-garde").ObjectCodec<{
            branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            commit_hash: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            commit_message: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>;
    }>;
    latest_stage: import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
        status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
        started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
        ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
    }>;
    stages: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
        status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
        started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
        ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
    }>>>;
    aliases: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    created_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    modified_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    build_config: import("@cloudflare/util-en-garde").ObjectCodec<{
        build_command: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        destination_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        root_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        web_analytics_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        web_analytics_token: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        fast_builds: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    }>;
    env_vars: import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>;
    kv_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>, import("io-ts").UndefinedC]>>;
    durable_object_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>, import("io-ts").UndefinedC]>>;
    short_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    build_image_major_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    source: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"github">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"gitlab">>]>>;
        config: import("@cloudflare/util-en-garde").ObjectCodec<{
            owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            repo_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            pr_comments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
            deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
            production_deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
            preview_deployment_setting: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"all">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"none">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"custom">>]>>, import("io-ts").UndefinedC]>>;
            preview_branch_includes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
            preview_branch_excludes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
        }>;
    }>, import("io-ts").UndefinedC]>>;
    is_skipped: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    files: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>>>, import("io-ts").UndefinedC]>>;
}>;
export declare type Deployment = TypeFromCodec<typeof Deployment>;
export declare const PlainText: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"plain_text">>;
export declare type PlainText = TypeFromCodec<typeof PlainText>;
export declare const SecretText: import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"secret_text">>;
export declare type SecretText = TypeFromCodec<typeof SecretText>;
export declare const EnvironmentVariableBindingValue: import("@cloudflare/util-en-garde").ObjectCodec<{
    value: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"plain_text">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"secret_text">>]>>, import("io-ts").UndefinedC]>>;
}>;
export declare type EnvironmentVariableBindingValue = TypeFromCodec<typeof EnvironmentVariableBindingValue>;
export declare const EnvironmentVariableBindingMap: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
    value: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"plain_text">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"secret_text">>]>>, import("io-ts").UndefinedC]>>;
}>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>>>;
export declare type EnvironmentVariableBindingMap = TypeFromCodec<typeof EnvironmentVariableBindingMap>;
export declare const NamespaceBindingValue: import("@cloudflare/util-en-garde").ObjectCodec<{
    namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare const DatabaseBindingValue: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare const BucketBindingValue: import("@cloudflare/util-en-garde").ObjectCodec<{
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare const ServiceBindingValue: import("@cloudflare/util-en-garde").ObjectCodec<{
    service: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type ServiceBindingValue = TypeFromCodec<typeof ServiceBindingValue>;
export declare const ServiceBindingMap: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
    service: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>>>;
export declare type ServiceBindingMap = TypeFromCodec<typeof ServiceBindingMap>;
export declare const DeploymentConfigEnv: import("@cloudflare/util-en-garde").ObjectCodec<{
    env_vars: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        value: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"plain_text">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"secret_text">>]>>, import("io-ts").UndefinedC]>>;
    }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>>>, import("io-ts").UndefinedC]>>;
    kv_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    durable_object_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    d1_databases: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    r2_buckets: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    services: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        service: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    compatibility_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    compatibility_flags: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    always_use_latest_compatibility_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    build_image_major_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    usage_model: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"bundled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"unbound">>]>>, import("io-ts").UndefinedC]>>;
}>;
export declare type DeploymentConfigEnv = TypeFromCodec<typeof DeploymentConfigEnv>;
export declare const DeploymentConfigs: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"production">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"preview">>]>>, import("@cloudflare/util-en-garde").ObjectCodec<{
    env_vars: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        value: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"plain_text">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"secret_text">>]>>, import("io-ts").UndefinedC]>>;
    }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>>>, import("io-ts").UndefinedC]>>;
    kv_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    durable_object_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    d1_databases: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    r2_buckets: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    services: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
        service: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
    compatibility_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    compatibility_flags: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    always_use_latest_compatibility_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    build_image_major_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    usage_model: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"bundled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"unbound">>]>>, import("io-ts").UndefinedC]>>;
}>>>;
export declare type DeploymentConfigs = TypeFromCodec<typeof DeploymentConfigs>;
export declare const Project: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    subdomain: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    domains: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    source: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
        type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"github">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"gitlab">>]>>;
        config: import("@cloudflare/util-en-garde").ObjectCodec<{
            owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            repo_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            pr_comments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
            deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
            production_deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
            preview_deployment_setting: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"all">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"none">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"custom">>]>>, import("io-ts").UndefinedC]>>;
            preview_branch_includes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
            preview_branch_excludes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
        }>;
    }>, import("io-ts").UndefinedC]>>;
    build_config: import("@cloudflare/util-en-garde").ObjectCodec<{
        build_command: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        destination_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        root_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        web_analytics_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        web_analytics_token: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        fast_builds: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    }>;
    deployment_configs: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"production">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"preview">>]>>, import("@cloudflare/util-en-garde").ObjectCodec<{
        env_vars: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            value: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"plain_text">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"secret_text">>]>>, import("io-ts").UndefinedC]>>;
        }>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>>>, import("io-ts").UndefinedC]>>;
        kv_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
            namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
        durable_object_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
            namespace_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
        d1_databases: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
        r2_buckets: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
            name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
        services: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").ObjectCodec<{
            service: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
        compatibility_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        compatibility_flags: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
        always_use_latest_compatibility_date: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        build_image_major_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
        usage_model: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"bundled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"unbound">>]>>, import("io-ts").UndefinedC]>>;
    }>>>;
    latest_deployment: import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        project_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        project_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        url: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"preview">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"production">>]>>;
        deployment_trigger: import("@cloudflare/util-en-garde").ObjectCodec<{
            type: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            metadata: import("@cloudflare/util-en-garde").ObjectCodec<{
                branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                commit_hash: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                commit_message: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            }>;
        }>;
        latest_stage: import("@cloudflare/util-en-garde").ObjectCodec<{
            name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
            started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
            ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
        }>;
        stages: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
            started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
            ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
        }>>>;
        aliases: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
        created_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        modified_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        build_config: import("@cloudflare/util-en-garde").ObjectCodec<{
            build_command: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            destination_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            root_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            web_analytics_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            web_analytics_token: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            fast_builds: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        }>;
        env_vars: import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>;
        kv_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>, import("io-ts").UndefinedC]>>;
        durable_object_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>, import("io-ts").UndefinedC]>>;
        short_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        build_image_major_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        source: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"github">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"gitlab">>]>>;
            config: import("@cloudflare/util-en-garde").ObjectCodec<{
                owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                repo_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
                pr_comments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
                deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
                production_deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
                preview_deployment_setting: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"all">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"none">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"custom">>]>>, import("io-ts").UndefinedC]>>;
                preview_branch_includes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
                preview_branch_excludes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
            }>;
        }>, import("io-ts").UndefinedC]>>;
        is_skipped: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        files: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>>>, import("io-ts").UndefinedC]>>;
    }>;
    canonical_deployment: import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        project_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        project_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        url: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        environment: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"preview">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"production">>]>>;
        deployment_trigger: import("@cloudflare/util-en-garde").ObjectCodec<{
            type: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            metadata: import("@cloudflare/util-en-garde").ObjectCodec<{
                branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                commit_hash: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                commit_message: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            }>;
        }>;
        latest_stage: import("@cloudflare/util-en-garde").ObjectCodec<{
            name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
            started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
            ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
        }>;
        stages: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"queued">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"initialize">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"clone_repo">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"build">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"deploy">>]>>;
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"idle">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"active">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"canceled">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"success">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"failure">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"skipped">>]>>;
            started_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
            ended_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").NullC>]>>;
        }>>>;
        aliases: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
        created_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        modified_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        build_config: import("@cloudflare/util-en-garde").ObjectCodec<{
            build_command: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            destination_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            root_dir: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            web_analytics_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            web_analytics_token: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
            fast_builds: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        }>;
        env_vars: import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>;
        kv_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>, import("io-ts").UndefinedC]>>;
        durable_object_namespaces: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").AnyC>, import("io-ts").UndefinedC]>>;
        short_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        build_image_major_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
        source: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").ObjectCodec<{
            type: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"github">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"gitlab">>]>>;
            config: import("@cloudflare/util-en-garde").ObjectCodec<{
                owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                repo_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
                pr_comments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
                deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
                production_deployments_enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
                preview_deployment_setting: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"all">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"none">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"custom">>]>>, import("io-ts").UndefinedC]>>;
                preview_branch_includes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
                preview_branch_excludes: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
            }>;
        }>, import("io-ts").UndefinedC]>>;
        is_skipped: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
        files: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>>>, import("io-ts").UndefinedC]>>;
    }>;
    created_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    production_branch: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    production_script_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    preview_script_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type Project = TypeFromCodec<typeof Project>;
/** Log message for Pages logs */
export declare const LogMessage: import("@cloudflare/util-en-garde").ObjectCodec<{
    ts: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    line: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
/** Log message for Pages logs */
export declare type LogMessage = TypeFromCodec<typeof LogMessage>;
/** Persistent logs from funfetti */
export declare const UnifiedDeploymentLogMessages: import("@cloudflare/util-en-garde").ObjectCodec<{
    data: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        ts: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        line: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>;
    total: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    includes_container_logs: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
}>;
/** Persistent logs from funfetti */
export declare type UnifiedDeploymentLogMessages = TypeFromCodec<typeof UnifiedDeploymentLogMessages>;
/** Live Logs jwt response from funfetti */
export declare const DeploymentLiveLogsJWT: import("@cloudflare/util-en-garde").ObjectCodec<{
    jwt: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
/** Live Logs jwt response from funfetti */
export declare type DeploymentLiveLogsJWT = TypeFromCodec<typeof DeploymentLiveLogsJWT>;
/** Live logs jwt payload for connecting to the live logs durable object */
export declare const DeploymentLiveLogsJWTPayload: import("@cloudflare/util-en-garde").ObjectCodec<{
    aud: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    exp: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    iat: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    iss: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    features: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    externalDeploymentId: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
/** Live logs jwt payload for connecting to the live logs durable object */
export declare type DeploymentLiveLogsJWTPayload = TypeFromCodec<typeof DeploymentLiveLogsJWTPayload>;
/** Response from Live Logs (api.pages.cloudflare.com/logs endpoint) to get existing logs over http */
export declare const DeploymentExistingLiveLogs: import("@cloudflare/util-en-garde").ObjectCodec<{
    nextIndex: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    logs: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        ts: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        line: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>;
}>;
/** Response from Live Logs (api.pages.cloudflare.com/logs endpoint) to get existing logs over http */
export declare type DeploymentExistingLiveLogs = TypeFromCodec<typeof DeploymentExistingLiveLogs>;
export declare const DirectUploadsJWT: import("@cloudflare/util-en-garde").ObjectCodec<{
    jwt: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare type DirectUploadsJWT = TypeFromCodec<typeof DirectUploadsJWT>;
export declare const UploadFileGroupPayload: import("@cloudflare/util-en-garde").ObjectCodec<{
    key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    value: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    metadata: import("@cloudflare/util-en-garde").ObjectCodec<{
        contentType: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>;
    base64: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
}>;
export declare type UploadFileGroupPayload = TypeFromCodec<typeof UploadFileGroupPayload>;
export declare const FunctionsUsageModel: import("../utils/enumerable").Enumerable<"bundled" | "unbound">;
export declare type FunctionsUsageModel = TypeFromEnumerable<typeof FunctionsUsageModel>;
export declare const AccountSettingsResult: import("@cloudflare/util-en-garde").ObjectCodec<{
    default_usage_model: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export declare const PagesTail: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    url: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    expires_at: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
}>;
export declare type PagesTailResult = TypeFromCodec<typeof PagesTail>;

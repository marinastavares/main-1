import { TypeFromCodec } from '@cloudflare/util-en-garde';
export declare const ZoneLevelAccessPolicyScope: import("@cloudflare/util-en-garde").ObjectCodec<{
    accountId: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    effect: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    mode: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    zoneId: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    resourceGroupId: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
}>;
export declare const ZoneLevelAccessPolicy: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    access: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    owner: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    emails: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    auto_accept: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>, import("io-ts").UndefinedC]>>;
    resource_groups: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
    permission_groups: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>;
    scopes: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        accountId: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        effect: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        mode: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        zoneId: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
        resourceGroupId: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    }>>>;
}>;
export declare const MembershipsPermission: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    implies: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>, import("io-ts").UndefinedC]>>;
}>;
export declare const PolicyPermissionGroup: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    meta: import("@cloudflare/util-en-garde").ObjectCodec<{
        description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        editable: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
        label: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        scopes: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>;
    permissions: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        implies: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
    }>>>, import("io-ts").UndefinedC]>>;
}>;
export declare const MembershipsNestedScope: import("@cloudflare/util-en-garde").ObjectCodec<{
    key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    objects: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>>>;
    subset_of: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        objects: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>, import("io-ts").UndefinedC]>>;
    }>>>, import("io-ts").UndefinedC]>>;
}>;
export declare const PolicyResourceGroup: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    meta: import("@cloudflare/util-en-garde").ObjectCodec<{
        editable: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    }>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    scope: import("@cloudflare/util-en-garde").ObjectCodec<{
        key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        objects: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>>>;
        subset_of: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            objects: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
                key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            }>>>, import("io-ts").UndefinedC]>>;
        }>>>, import("io-ts").UndefinedC]>>;
    }>;
}>;
export declare const MembershipsPolicy: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    access: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    permission_groups: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        meta: import("@cloudflare/util-en-garde").ObjectCodec<{
            description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            editable: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
            label: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            scopes: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>;
        permissions: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
            id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            implies: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
                id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            }>>>, import("io-ts").UndefinedC]>>;
        }>>>, import("io-ts").UndefinedC]>>;
    }>>>;
    resource_groups: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
        id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        meta: import("@cloudflare/util-en-garde").ObjectCodec<{
            editable: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>;
        name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        scope: import("@cloudflare/util-en-garde").ObjectCodec<{
            key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            objects: import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
                key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            }>>>;
            subset_of: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
                key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                objects: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").ObjectCodec<{
                    key: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
                }>>>, import("io-ts").UndefinedC]>>;
            }>>>, import("io-ts").UndefinedC]>>;
        }>;
    }>>>;
}>;
export declare type ZoneLevelAccessPolicy = TypeFromCodec<typeof ZoneLevelAccessPolicy>;
export declare type ZoneLevelAccessPolicyScope = TypeFromCodec<typeof ZoneLevelAccessPolicyScope>;
export declare type PolicyPermissionGroup = TypeFromCodec<typeof PolicyPermissionGroup>;
export declare type MembershipsNestedScope = TypeFromCodec<typeof MembershipsNestedScope>;
export declare type MembershipsPermission = TypeFromCodec<typeof MembershipsPermission>;
export declare type MembershipsPolicy = TypeFromCodec<typeof MembershipsPolicy>;
export declare type PolicyResourceGroup = TypeFromCodec<typeof PolicyResourceGroup>;

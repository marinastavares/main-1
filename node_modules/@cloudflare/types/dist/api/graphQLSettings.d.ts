import { TypeFromCodec } from '@cloudflare/util-en-garde';
export declare const GraphQLNodeName: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"firewallEventsAdaptive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"firewallEventsAdaptiveByTimeGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"firewallEventsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"httpRequestsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"imageResizingRequests1mGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"loadBalancingRequestsAdaptive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"loadBalancingRequestsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"healthCheckEventsAdaptive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"healthCheckEventsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"nelReportsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"waitingRoomAnalyticsAdaptiveGroups">>]>>;
export declare type GraphQLNodeName = TypeFromCodec<typeof GraphQLNodeName>;
export declare const GraphQLSetting: import("@cloudflare/util-en-garde").ObjectCodec<{
    enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    maxDuration: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    maxNumberOfFields: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    maxPageSize: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    notOlderThan: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    availableFields: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
}>;
export declare type GraphQLSetting = TypeFromCodec<typeof GraphQLSetting>;
export declare const GraphQLSettings: import("@cloudflare/util-en-garde").Codec<import("io-ts").RecordC<import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"firewallEventsAdaptive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"firewallEventsAdaptiveByTimeGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"firewallEventsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"httpRequestsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"imageResizingRequests1mGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"loadBalancingRequestsAdaptive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"loadBalancingRequestsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"healthCheckEventsAdaptive">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"healthCheckEventsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"nelReportsAdaptiveGroups">>, import("@cloudflare/util-en-garde").Codec<import("io-ts").LiteralC<"waitingRoomAnalyticsAdaptiveGroups">>]>>, import("@cloudflare/util-en-garde").ObjectCodec<{
    enabled: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    maxDuration: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    maxNumberOfFields: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>, import("io-ts").UndefinedC]>>;
    maxPageSize: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    notOlderThan: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    availableFields: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").ArrayC<import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>>>, import("io-ts").UndefinedC]>>;
}>>>;
export declare type GraphQLSettings = TypeFromCodec<typeof GraphQLSettings>;

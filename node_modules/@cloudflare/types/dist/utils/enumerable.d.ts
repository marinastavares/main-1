/**
 * Creates an object whose keys and values are equal, populated
 * from the list of keys provided
 * @param keys Keys to populate enumerable
 */
export declare function enumerable<T extends string>(keys: ReadonlyArray<T>): Enumerable<typeof keys[number]>;
export declare type Enumerable<T extends string> = {
    [K in T]: K;
} & {
    is: (data: any) => data is T;
};
export declare type TypeFromEnumerable<T extends Enumerable<any>> = T extends Enumerable<infer P> ? P : never;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { createRenderer, StyleProvider as StyleProviderComponent } from '@cloudflare/style-provider';
import { renderToSheetList } from 'fela-dom'; // eslint-disable-line behance/no-deprecated

import PropTypes from 'prop-types';
var felaRenderer = createRenderer();

var getInitialProps = callback => nextObj => {
  var page = nextObj.renderPage();
  var cfFelaSheetList = renderToSheetList(felaRenderer);
  felaRenderer.clear();
  var userProps = callback ? callback(nextObj) : {};
  return _objectSpread(_objectSpread(_objectSpread({}, page), userProps), {}, {
    cfFelaSheetList
  });
};

var getStyles = props => props.cfFelaSheetList.map(_ref => {
  var {
    type,
    media,
    css
  } = _ref;
  return /*#__PURE__*/React.createElement("style", {
    dangerouslySetInnerHTML: {
      __html: css
    },
    "data-fela-type": type,
    key: "".concat(type, "-").concat(media),
    media: media
  });
});

var StyleProvider = _ref2 => {
  var {
    children
  } = _ref2;
  return /*#__PURE__*/React.createElement(StyleProviderComponent, {
    renderer: felaRenderer
  }, children);
};

StyleProvider.propTypes = {
  children: PropTypes.node
};
export { StyleProvider, getInitialProps, getStyles };
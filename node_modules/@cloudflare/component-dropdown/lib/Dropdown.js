"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _exenv = require("exenv");

var _styleContainer = require("@cloudflare/style-container");

var _DropdownRegistry = _interopRequireDefault(require("./DropdownRegistry"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var styles = function styles(_ref) {
  var theme = _ref.theme,
      _ref$align = _ref.align,
      align = _ref$align === void 0 ? 'left' : _ref$align;
  return {
    position: 'absolute',
    zIndex: 1,
    minWidth: '160px',
    mt: 3,
    mx: 0,
    mb: 0,
    px: 0,
    py: 1,
    listStyle: 'none',
    background: theme.colors.white,
    border: "1px solid ".concat(theme.colors.gray[7]),
    borderRadius: theme.borderRadius,
    boxShadow: '0 3px 10px rgba(0, 0, 0, 0.2)',
    left: align === 'left' ? 0 : 'initial',
    right: align === 'right' ? 0 : 'initial',
    textAlign: 'initial',
    animationName: {
      '0%': {
        display: 'none',
        opacity: 0
      },
      '1%': {
        display: 'block',
        opacity: 0,
        top: '80%'
      },
      '100%': {
        display: 'none',
        opacity: 1,
        top: '102%'
      }
    },
    animationDuration: '150ms',
    animationTimingFunction: 'ease-out',
    '&::before': {
      content: "''",
      display: 'block',
      position: 'absolute',
      bottom: '100%',
      border: 'solid transparent',
      borderWidth: '11px',
      borderTopWidth: 0,
      borderBottomColor: theme.colors.gray[7],
      left: align === 'left' ? '9px' : 'initial',
      right: align === 'right' ? '9px' : 'initial'
    },
    '&::after': {
      content: "''",
      display: 'block',
      position: 'absolute',
      bottom: '100%',
      border: 'solid transparent',
      borderWidth: '10px',
      borderTopWidth: 0,
      borderBottomColor: theme.colors.white,
      left: align === 'left' ? '10px' : 'initial',
      right: align === 'right' ? '10px' : 'initial'
    }
  };
};

var Dropdown =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Dropdown, _React$Component);

  _createClass(Dropdown, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        dropdownRegistry: this.dropdownRegistry
      };
    }
  }]);

  function Dropdown(props, context) {
    var _this;

    _classCallCheck(this, Dropdown);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props, context));
    _this.dropdownRegistry = new _DropdownRegistry.default();
    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.handleDocumentKeydown = _this.handleDocumentKeydown.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(Dropdown, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (_exenv.canUseDOM) {
        global.document.addEventListener('keydown', this.handleDocumentKeydown);
        global.document.addEventListener('click', this.handleDocumentClick);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (_exenv.canUseDOM) {
        global.document.removeEventListener('keydown', this.handleDocumentKeydown);
        global.document.removeEventListener('click', this.handleDocumentClick);
      }
    }
  }, {
    key: "handleDocumentKeydown",
    value: function handleDocumentKeydown(event) {
      var keyCode = event.keyCode;

      if (keyCode === 40) {
        // down
        event.preventDefault();
        this.dropdownRegistry.focusNext();
      } else if (keyCode === 38) {
        // up
        event.preventDefault();
        this.dropdownRegistry.focusPrev();
      } else if (keyCode === 27) {
        // esc
        this.props.onClose();
      }
    }
  }, {
    key: "handleDocumentClick",
    value: function handleDocumentClick() {
      this.props.onClose();
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("ul", {
        className: this.props.className,
        role: "menu"
      }, this.props.children);
    }
  }]);

  return Dropdown;
}(_react.default.Component);

Dropdown.propTypes = {
  className: _propTypes.default.string,
  onClose: _propTypes.default.func.isRequired,
  align: _propTypes.default.oneOf(['left', 'right']),
  children: _propTypes.default.node
};
Dropdown.defaultProps = {
  align: 'left'
};
Dropdown.childContextTypes = {
  dropdownRegistry: _propTypes.default.instanceOf(_DropdownRegistry.default).isRequired
};
Dropdown.displayName = 'Dropdown';

var _default = (0, _styleContainer.createStyledComponent)(styles, Dropdown);

exports.default = _default;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* eslint-disable behance/no-deprecated */
import React, { useContext } from 'react';
import getReactDisplayName from 'react-display-name';
import { RendererContext } from 'react-fela';

function withRenderer(ComponentToWrap) {
  var WithRendererComponent = props => {
    var renderer = useContext(RendererContext);
    return /*#__PURE__*/React.createElement(ComponentToWrap, _extends({
      renderer: renderer
    }, props));
  };

  WithRendererComponent.displayName = getReactDisplayName(ComponentToWrap);
  return WithRendererComponent;
}

export default withRenderer;
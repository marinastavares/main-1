'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyles = exports.getInitialProps = exports.StyleProvider = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // eslint-disable-line behance/no-deprecated


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _cfStyleProvider = require('cf-style-provider');

var _felaDom = require('fela-dom');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const felaRenderer = (0, _cfStyleProvider.createRenderer)();

const getInitialProps = callback => nextObj => {
  const page = nextObj.renderPage();
  const cfFelaSheetList = (0, _felaDom.renderToSheetList)(felaRenderer);
  felaRenderer.clear();
  const userProps = callback ? callback(nextObj) : {};
  return _extends({}, page, userProps, {
    cfFelaSheetList
  });
};

const getStyles = props => props.cfFelaSheetList.map(({ type, media, css }) => _react2.default.createElement('style', {
  dangerouslySetInnerHTML: { __html: css },
  'data-fela-type': type,
  key: `${type}-${media}`,
  media: media
}));

const StyleProvider = ({ children }) => _react2.default.createElement(
  _cfStyleProvider.StyleProvider,
  { renderer: felaRenderer },
  children
);

StyleProvider.propTypes = {
  children: _propTypes2.default.node
};

exports.StyleProvider = StyleProvider;
exports.getInitialProps = getInitialProps;
exports.getStyles = getStyles;
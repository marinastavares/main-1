import { clusterCache, objectReduce, RULE_TYPE, KEYFRAME_TYPE, FONT_TYPE, STATIC_TYPE } from 'fela-utils';

import getRehydrationIndex from './getRehydrationIndex';

var sheetMap = {
  fontFaces: FONT_TYPE,
  statics: STATIC_TYPE,
  keyframes: KEYFRAME_TYPE,
  rules: RULE_TYPE
};

export default function renderToSheetList(renderer) {
  var cacheCluster = clusterCache(renderer.cache, renderer.mediaQueryOrder);

  var rehydrationIndex = getRehydrationIndex(renderer);

  var sheetList = objectReduce(sheetMap, function (list, type, key) {
    if (cacheCluster[key].length > 0) {
      list.push({
        css: cacheCluster[key],
        rehydration: rehydrationIndex,
        type: type
      });
    }

    return list;
  }, []);

  return objectReduce(cacheCluster.mediaRules, function (list, css, media) {
    if (css.length > 0) {
      list.push({
        css: css,
        type: RULE_TYPE,
        rehydration: rehydrationIndex,
        media: media
      });
    }

    return list;
  }, sheetList);
}
import React, { Children, isValidElement, cloneElement } from 'react';
import PropTypes from 'prop-types';
import createRenderer from './createRenderer';
import { Provider } from 'react-fela'; // eslint-disable-line behance/no-deprecated
import { variables } from 'cf-style-const'; // eslint-disable-line behance/no-deprecated
import { ThemeProvider } from 'cf-style-container';

const StyleProvider = ({
  dev,
  children,
  renderer,
  rehydrate,
  ...restProps
}) => {
  const providerRenderer =
    renderer ||
    createRenderer({
      dev
    });
  const child = Children.only(children);
  return (
    <Provider renderer={providerRenderer} rehydrate={rehydrate}>
      <ThemeProvider theme={variables}>
        {isValidElement(child) ? cloneElement(child, { ...restProps }) : child}
      </ThemeProvider>
    </Provider>
  );
};

StyleProvider.propTypes = {
  children: PropTypes.node,
  dev: PropTypes.bool,
  renderer: PropTypes.object,
  rehydrate: PropTypes.bool
};

export default StyleProvider;

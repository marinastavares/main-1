'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fela = require('fela');

var _felaPluginPrefixer = require('fela-plugin-prefixer');

var _felaPluginPrefixer2 = _interopRequireDefault(_felaPluginPrefixer);

var _felaPluginFallbackValue = require('fela-plugin-fallback-value');

var _felaPluginFallbackValue2 = _interopRequireDefault(_felaPluginFallbackValue);

var _felaPluginUnit = require('fela-plugin-unit');

var _felaPluginUnit2 = _interopRequireDefault(_felaPluginUnit);

var _felaPluginLvha = require('fela-plugin-lvha');

var _felaPluginLvha2 = _interopRequireDefault(_felaPluginLvha);

var _felaPluginEmbedded = require('fela-plugin-embedded');

var _felaPluginEmbedded2 = _interopRequireDefault(_felaPluginEmbedded);

var _felaPluginNamedMediaQuery = require('fela-plugin-named-media-query');

var _felaPluginNamedMediaQuery2 = _interopRequireDefault(_felaPluginNamedMediaQuery);

var _cfStyleConst = require('cf-style-const');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-line behance/no-deprecated

const defaultOpts = {
  dev: false
}; // eslint-disable-line behance/no-deprecated


const mediaQueries = {
  mobile: `@media (min-width: ${_cfStyleConst.variables.breakpoints.mobile})`,
  mobileWide: `@media (min-width: ${_cfStyleConst.variables.breakpoints.mobileWide})`,
  tablet: `@media (min-width: ${_cfStyleConst.variables.breakpoints.tablet})`,
  tabletLegacy: `@media (min-width: ${_cfStyleConst.variables.breakpoints.tabletLegacy})`,
  tabletWide: `@media (min-width: ${_cfStyleConst.variables.breakpoints.tabletWide})`,
  desktop: `@media (min-width: ${_cfStyleConst.variables.breakpoints.desktop})`,
  desktopLegacy: `@media (min-width: ${_cfStyleConst.variables.breakpoints.desktopLegacy})`,
  desktopLarge: `@media (min-width: ${_cfStyleConst.variables.breakpoints.desktopLarge})`,
  hover: `@media (hover)`
};

const removePrefix = query => query.replace('@media ', '');

const createRenderer = opts => {
  const usedOpts = Object.assign({}, defaultOpts, opts);
  const plugins = [(0, _felaPluginPrefixer2.default)(), (0, _felaPluginFallbackValue2.default)(), (0, _felaPluginUnit2.default)(), (0, _felaPluginLvha2.default)(), (0, _felaPluginEmbedded2.default)(), (0, _felaPluginNamedMediaQuery2.default)(mediaQueries)];
  const enhancers = [];

  if (usedOpts.dev === true) {
    const validator = require('fela-plugin-validator').default;
    const whitelistMediaQuery = require('./whitelistMediaQuery').default;
    const beautifier = require('fela-beautifier').default;
    plugins.push(validator());
    plugins.push(whitelistMediaQuery(mediaQueries));
    enhancers.push(beautifier());
  }

  return (0, _fela.createRenderer)({
    plugins,
    enhancers,
    selectorPrefix: usedOpts.selectorPrefix,
    mediaQueryOrder: [removePrefix(mediaQueries.hover), removePrefix(mediaQueries.mobile), removePrefix(mediaQueries.mobileWide), removePrefix(mediaQueries.tablet), removePrefix(mediaQueries.tabletLegacy), removePrefix(mediaQueries.tabletWide), removePrefix(mediaQueries.desktop), removePrefix(mediaQueries.desktopLegacy), removePrefix(mediaQueries.desktopLarge)]
  });
};

exports.default = createRenderer;